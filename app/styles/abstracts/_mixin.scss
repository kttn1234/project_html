@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $max: map-get($breakpoints, $name);
  @return if($max != 0, $max - 1, null);
}

@mixin mq($name, $type: max, $breakpoints: $grid-breakpoints) {
  @if map_has_key($breakpoints, $name) {
    $width: map_get($breakpoints, $name);
    @if $type == max {
      $width: $width - 1px;

      $max: breakpoint-max($name, $breakpoints);
      @if $max {
        @media (max-width: $max) {
          @content;
        }
      } @else {
        @content;
      }
    } @else {
      $min: breakpoint-min($name, $breakpoints);

      @if $min {
        @media (min-width: $min) {
          @content;
        }
      } @else {
        @content;
      }
    }
  }
}

@mixin hover() {
  &:hover {
    @content;
  }
}

@mixin hover-focus() {
  &:hover,
  &:focus {
    @content;
  }
}
@mixin hover-icon {
  transition: all .3s;
  cursor: pointer;
  &:hover {
    opacity: .7;
  }
}
// - Border-radius các card lớn hơn 128px -> 8px
@mixin bdr-main() {
  border: rem(1) solid $border;
  border-radius: rem(8);
}

//  Border-radius các card < 128px -> 4px
//  Border-radius các icon -> 4px
@mixin bdr-sub() {
  border: rem(1) solid $border;
  border-radius: rem(4);
}

// Padding frame lớn
@mixin pd-main() {
  padding: rem(16) rem(24);
}

// Padding frame nhỏ
@mixin pd-sub() {
  padding: rem(12) rem(16);
}
